import sensor, image, time, lcd
from maix import KPU
import gc
gc.collect() 

lcd.init()
sensor.reset()
sensor.set_vflip(1)
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.skip_frames(time = 1000)
clock = time.clock()

od_img = image.Image(size=(224,224), copy_to_fb=False)
anchor = [1.89, 1.77, 1.56, 2.75, 2.19, 2.19, 2.69, 2.59, 1.47, 1.41]

kpu = KPU()
kpu.load_kmodel("/sd/object_detection/object_detection.kmodel")
kpu.init_yolo2(anchor, anchor_num=5, img_w=320, img_h=240, net_w=224 , net_h=224 ,layer_w=7 ,layer_h=7, threshold=0.4, nms_value=0.3, classes=4)

labels = ['Crosswalks','slow','stop', 'human']

while True:
    clock.tick()
    img = sensor.snapshot()
    od_img.draw_image(img, 0,0)
    od_img.pix_to_ai()
    kpu.run_with_output(od_img)
    dect = kpu.regionlayer_yolo2()
    fps = clock.fps()

    if len(dect) > 0:
        print("dect:",dect)
        for l in dect:
            img.draw_rectangle(int(l[0]/1.4),l[1],int(l[2]/1.4),l[3], color=(0, 255, 0))
            img.draw_string(int(l[0]/1.4),l[1], labels[l[4]], color=(255,0,0),scale=1.5)

    img.draw_string(0, 0, "%2.1ffps" %(fps), color=(0, 60, 128), scale=2.0)
    lcd.display(img)
    gc.collect()

kpu.deinit()
