import sensor, image, time, lcd
from maix import KPU
from maix import GPIO
from fpioa_manager import fm
from machine import Timer, PWM
import gc

# ── 초기화 ──────────────────────────────────────────────────────────────
gc.collect()
lcd.init()
sensor.reset()
sensor.set_vflip(1)
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)          # 320×240
sensor.skip_frames(time=1000)
clock = time.clock()
od_img = image.Image(size=(224,224), copy_to_fb=False)


# YOLO 앵커
anchor = (0.8125, 0.4556, 1.1328, 1.2667,
          1.8594, 1.4889, 1.4844, 2.2000,
          2.6484, 2.9333)

# KPU & YOLO 초기화
kpu = KPU()
kpu.load_kmodel("/sd/object_detection/object_detection") # 모델 만들기 필요 (표지판)
#kpu.init_yolo2(anchor,
               #anchor_num=5,
               #img_w=320, img_h=240,
               #net_w=320, net_h=240,    # 256 → 240
               #layer_w=10, layer_h=8,
               #threshold=0.7, nms_value=0.3,
               #classes=1)

kpu.init_yolo2(anchor, anchor_num=5, img_w=320, img_h=240, net_w=224 , net_h=224 ,layer_w=7 ,layer_h=7, threshold=0.4, nms_value=0.3, classes=4)

labels = ['Crosswalks','slow','stop', 'human']


# ── 모터 PWM 설정 ──────────────────────────────────────────────────────
tim0 = Timer(Timer.TIMER0, Timer.CHANNEL0, mode=Timer.MODE_PWM)
tim1 = Timer(Timer.TIMER0, Timer.CHANNEL1, mode=Timer.MODE_PWM)
tim2 = Timer(Timer.TIMER0, Timer.CHANNEL2, mode=Timer.MODE_PWM)
tim3 = Timer(Timer.TIMER0, Timer.CHANNEL3, mode=Timer.MODE_PWM)

left_ia  = PWM(tim0, freq=2000, duty=0, pin=13)
left_ib  = PWM(tim1, freq=2000, duty=0, pin=19)
right_ia = PWM(tim2, freq=2000, duty=0, pin=10)
right_ib = PWM(tim3, freq=2000, duty=0, pin=17)

def car_go(speed):    left_ia.duty(0);      left_ib.duty(speed); right_ia.duty(speed); right_ib.duty(0)
def car_back(speed):  left_ia.duty(speed);  left_ib.duty(0);     right_ia.duty(0);     right_ib.duty(speed)
def car_left(speed):  left_ia.duty(speed);  left_ib.duty(0);     right_ia.duty(speed); right_ib.duty(0)
def car_right(speed): left_ia.duty(0);      left_ib.duty(speed); right_ia.duty(0);     right_ib.duty(speed)

last_time = 0  # ‘stop’ 간격 체크용

# ── 메인 루프 ──────────────────────────────────────────────────────────
try:
    while True:
        clock.tick()
        img = sensor.snapshot()
        od_img.draw_image(img, 0,0)
        od_img.pix_to_ai()
        kpu.run_with_output(od_img)
        dect = kpu.regionlayer_yolo2()
        fps = clock.fps()

        if len(dect) > 0:
            print("dect:",dect)
            for l in dect:
                img.draw_rectangle(int(l[0]/1.4),l[1],int(l[2]/1.4),l[3], color=(0, 255, 0))
                img.draw_string(int(l[0]/1.4),l[1], labels[l[4]], color=(255,0,0),scale=1.5)

                /blank/




        img.draw_string(0, 0, "%2.1ffps" %(fps), color=(0, 60, 128), scale=2.0)
        lcd.display(img)
        gc.collect()
finally:
    kpu.deinit()
